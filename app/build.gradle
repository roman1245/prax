apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'com.google.firebase.firebase-crash'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    defaultConfig {
        applicationId "xyz.kandrac.library"
        testApplicationId "kandrac.xyz.library.test"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 36
        versionName "1.5.7"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        // Database authorities definitions
        buildConfigField 'String', 'DATABASE_AUTHORITY', '"xyz.kandrac.library"'
        buildConfigField 'String', 'FILE_PROVIDER_AUTHORITY', '"xyz.kandrac.library.files"'
        buildConfigField 'String', 'GOOGLE_BOOKS_API_URL', '"https://www.googleapis.com"'
        buildConfigField 'String', 'LIBRARY_API_URL', '"http://kandrac.xyz"'
        buildConfigField 'String', 'APP_PUBLIC_KEY', '""'
        buildConfigField 'int', 'NEWS_VERSION', '1'
        buildConfigField 'boolean', 'NEWS_SHOW', 'true'

        vectorDrawables.useSupportLibrary = true
        manifestPlaceholders = [databaseAuthority    : "xyz.kandrac.library",
                                fileProviderAuthority: "xyz.kandrac.library.files"]
    }

    signingConfigs {
        //noinspection GroovyMissingReturnStatement
        release {
            if (System.getenv("KANDRAC_KEYSTORE") != null)
                storeFile file(System.getenv("KANDRAC_KEYSTORE"))
            if (System.getenv("KANDRAC_KEYSTORE_PASS") != null)
                storePassword System.getenv("KANDRAC_KEYSTORE_PASS")
            if (System.getenv("LIBRARY_KEY_ALIAS") != null)
                keyAlias System.getenv("LIBRARY_KEY_ALIAS")
            if (System.getenv("LIBRARY_KEY_PASS") != null)
                keyPassword System.getenv("LIBRARY_KEY_PASS")
        }
    }

    buildTypes {

        release {
            //noinspection GroovyAssignabilityCheck
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            buildConfigField 'String', 'GOOGLE_TOKEN', '"958496077479-k98j56dm8cm42ltmrtvl7n452g73f6l5.apps.googleusercontent.com"'
            buildConfigField 'String', 'GOOGLE_API_KEY', '"AIzaSyB856kGT7z6lYo_99pikNEGs1jFaCCltxs"'
        }

        debug {
            applicationIdSuffix '.debug'
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                    'proguard-rules.pro',
                    'proguard-rules-debug.pro'

            // Database authorities definitions
            buildConfigField 'String', 'GOOGLE_TOKEN', '"484886958517-1uk79pdo3readop5cgdj7lnbo95jd2i9.apps.googleusercontent.com"'
            buildConfigField 'String', 'DATABASE_AUTHORITY', '"xyz.kandrac.library.debug"'
            buildConfigField 'String', 'GOOGLE_API_KEY', '"AIzaSyBhGenifD9XgRW8q-rzEKyo3KlplHAf8J8"'
            buildConfigField 'String', 'FILE_PROVIDER_AUTHORITY', '"xyz.kandrac.library.files.debug"'

            manifestPlaceholders = [databaseAuthority    : "xyz.kandrac.library.debug",
                                    fileProviderAuthority: "xyz.kandrac.library.files.debug"]
        }
    }

    productFlavors {
        pro {
            applicationIdSuffix ".pro"
        }
        free {
            applicationIdSuffix ".free"
        }
    }

    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {

    // project dependencies
    compile files('libs/opencsv-3.7.jar')
    compile project(':barcode')

    // compat libraries
    compile "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:design:$rootProject.supportLibraryVersion"
    compile "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:gridlayout-v7:$rootProject.supportLibraryVersion"

    // helper libraries
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.squareup.okhttp3:logging-interceptor:3.3.1'
    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.squareup.retrofit2:converter-gson:2.1.0'
    compile 'io.github.yavski:fab-speed-dial:1.0.6'

    // gms and fire-base
    compile "com.google.android.gms:play-services-auth:$rootProject.playServicesVersion"
    compile "com.google.firebase:firebase-database:$rootProject.firebaseVersion"
    compile "com.google.firebase:firebase-auth:$rootProject.firebaseVersion"
    compile "com.google.firebase:firebase-crash:$rootProject.firebaseVersion"

    compile "com.android.support.test.espresso:espresso-idling-resource:$rootProject.espressoVersion"

    // Dagger dependencies
    apt "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
    compile "com.google.dagger:dagger:$rootProject.daggerVersion"

    // Dependencies for local unit tests
    testCompile "junit:junit:$rootProject.ext.junitVersion"

    // Android Testing Support Library's runner and rules
    androidTestCompile "com.android.support.test:runner:$rootProject.ext.runnerVersion"
    androidTestCompile "com.android.support.test:rules:$rootProject.ext.runnerVersion"

    // Dependencies for Android unit tests
    androidTestCompile "junit:junit:$rootProject.ext.junitVersion"

    // Espresso UI Testing
    androidTestCompile "com.android.support.test.espresso:espresso-core:$rootProject.espressoVersion"
    androidTestCompile "com.android.support.test.espresso:espresso-contrib:$rootProject.espressoVersion"
    androidTestCompile "com.android.support.test.espresso:espresso-intents:$rootProject.espressoVersion"

    // Resolve conflicts between main and test APK:
    androidTestCompile "com.android.support:support-annotations:$rootProject.supportLibraryVersion"
    androidTestCompile "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    androidTestCompile "com.android.support:design:$rootProject.supportLibraryVersion"

    androidTestCompile 'com.google.dexmaker:dexmaker:1.2'
    provided 'org.glassfish:javax.annotation:10.0-b28'

    compile('com.crashlytics.sdk.android:crashlytics:2.6.6@aar') {
        transitive = true;
    }
}

apply plugin: 'com.google.gms.google-services'